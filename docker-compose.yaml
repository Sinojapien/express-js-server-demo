version: "0.0.1"
services:
  postgresDB:
    image: postgres:latest
    hostname: ${POSTGRES_HOST}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
  web-socket:
    build:
      context: ./web-socket
      dockerfile: ./Dockerfile
    hostname: ${WEBSOCKET_HOST}
    environment:
      PORT: ${WEBSOCKET_PORT}
    restart: on-failure
  express-app:
    build:
      context: ./express-app
      dockerfile: ./Dockerfile
    hostname: ${EXPRESS_HOST}
    depends_on:
      - postgresDB
      - web-socket
    environment:
      PORT: ${EXPRESS_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
  reverse-proxy:
    image: nginx:stable-alpine
    volumes:
      ## config file persistence
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template
    depends_on:
      - postgresDB
      - express-app
      - web-socket
    ports:
      - 80:80
    environment:
      EXPRESS_SERVER_HOST: ${EXPRESS_HOST}
      EXPRESS_SERVER_PORT: ${EXPRESS_PORT}
      WEBSOCKET_SERVER_HOST: ${WEBSOCKET_HOST}
      WEBSOCKET_SERVER_PORT: ${WEBSOCKET_PORT}
    restart: always
